--!strict
-- Lasso Market (Torn + Western only) ‚Äî uses ReplicatedStorage.Remotes.PurchaseItemRemote
-- Quantities of 0 are ignored. Click "Buy Now" or call _G.TriggerLassoPurchase()

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LP = Players.LocalPlayer

-- ================= DATA =================
type LassoItem = { id: string, name: string, price: number }
local Catalog: {LassoItem} = {
    { id = "TornLasso",    name = "TornLasso",    price = 50 },
    { id = "WesternLasso", name = "WesternLasso", price = 90 },
}
local Order: { [string]: number } = {}
for _, it in ipairs(Catalog) do Order[it.id] = 0 end

-- ================= UI (small, minimal) =================
local gui = Instance.new("ScreenGui")
gui.Name = "LassoMarketUI"; gui.ResetOnSpawn = false; gui.IgnoreGuiInset = true
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = LP:WaitForChild("PlayerGui")

local panel = Instance.new("Frame")
panel.Size = UDim2.new(0, 380, 0, 210)
panel.Position = UDim2.new(0, 24, 0, 80)
panel.BackgroundColor3 = Color3.fromRGB(22,22,22)
panel.BackgroundTransparency = 0.08
panel.BorderSizePixel = 0
panel.Active = true
panel.Parent = gui

-- drag
do
    local dragging, start, startPos = false, nil, nil
    panel.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true; start=i.Position; startPos=panel.Position end end)
    panel.InputEnded:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    UIS.InputChanged:Connect(function(i)
        if dragging and i.UserInputType==Enum.UserInputType.MouseMovement and start and startPos then
            local d = i.Position - start
            panel.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + d.X, startPos.Y.Scale, startPos.Y.Offset + d.Y)
        end
    end)
end

local title = Instance.new("TextLabel")
title.BackgroundTransparency = 1
title.Position = UDim2.new(0, 10, 0, 6)
title.Size = UDim2.new(1, -10, 0, 20)
title.Font = Enum.Font.Code; title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextColor3 = Color3.fromRGB(220,255,220)
title.Text = "Lasso Market"
title.Parent = panel

local list = Instance.new("Frame")
list.BackgroundTransparency = 1
list.Position = UDim2.new(0, 10, 0, 32)
list.Size = UDim2.new(1, -20, 0, 130)
list.Parent = panel

local function row(it: LassoItem, y: number)
    local r = Instance.new("Frame")
    r.Size = UDim2.new(1, 0, 0, 28); r.Position = UDim2.new(0, 0, 0, y)
    r.BackgroundTransparency = 1; r.Parent = list

    local nameL = Instance.new("TextLabel")
    nameL.BackgroundTransparency = 1; nameL.Position = UDim2.new(0,0,0,4)
    nameL.Size = UDim2.new(0.5,0,1,-8); nameL.Font = Enum.Font.Code; nameL.TextSize = 14
    nameL.TextXAlignment = Enum.TextXAlignment.Left; nameL.TextColor3 = Color3.fromRGB(235,235,235)
    nameL.Text = it.name; nameL.Parent = r

    local priceL = nameL:Clone()
    priceL.Position = UDim2.new(0.5,0,0,4)
    priceL.Size = UDim2.new(0.15,0,1,-8)
    priceL.TextColor3 = Color3.fromRGB(200,220,255)
    priceL.Text = tostring(it.price); priceL.Parent = r

    local minus = Instance.new("TextButton")
    minus.Size = UDim2.new(0,24,0,24); minus.Position = UDim2.new(0.68,0,0,2)
    minus.Text = "‚Äì"; minus.BackgroundColor3 = Color3.fromRGB(50,50,50); minus.BorderSizePixel = 0; minus.Parent = r

    local qty = Instance.new("TextBox")
    qty.Size = UDim2.new(0,40,0,24); qty.Position = UDim2.new(0.78,0,0,2)
    qty.Text = tostring(Order[it.id]); qty.ClearTextOnFocus = false
    qty.BackgroundColor3 = Color3.fromRGB(30,30,30); qty.TextColor3 = Color3.fromRGB(240,240,240)
    qty.BorderSizePixel = 0; qty.Font = Enum.Font.Code; qty.TextSize = 14; qty.Parent = r

    local plus = minus:Clone(); plus.Text = "+"; plus.Position = UDim2.new(0.78,44,0,2); plus.Parent = r

    local function clamp(n:number) return math.max(0, math.min(999, math.floor((tonumber(n) or 0)+0.0001))) end
    local function setQty(n:number) n = clamp(n); Order[it.id]=n; qty.Text = tostring(n) end
    minus.MouseButton1Click:Connect(function() setQty((Order[it.id] or 0)-1) end)
    plus.MouseButton1Click:Connect(function() setQty((Order[it.id] or 0)+1) end)
    qty.FocusLost:Connect(function() setQty(qty.Text) end)
end
for i,it in ipairs(Catalog) do row(it,(i-1)*30) end

local totalL = Instance.new("TextLabel")
totalL.BackgroundTransparency = 1
totalL.Position = UDim2.new(0, 10, 0, 164)
totalL.Size = UDim2.new(0.6, 0, 0, 20)
totalL.Font = Enum.Font.Code; totalL.TextSize = 14
totalL.TextXAlignment = Enum.TextXAlignment.Left
totalL.TextColor3 = Color3.fromRGB(235,255,235)
totalL.Text = "Queued total: 0"
totalL.Parent = panel

local function refreshTotal()
    local t=0; for _,it in ipairs(Catalog) do t += it.price*(Order[it.id] or 0) end
    totalL.Text = "Queued total: "..tostring(t)
end
task.spawn(function() while task.wait(0.4) do refreshTotal() end end)

local statusL = Instance.new("TextLabel")
statusL.BackgroundTransparency = 1
statusL.Position = UDim2.new(0, 10, 1, -22)
statusL.Size = UDim2.new(1, -20, 0, 18)
statusL.Font = Enum.Font.Code; statusL.TextSize = 13
statusL.TextXAlignment = Enum.TextXAlignment.Left
statusL.TextColor3 = Color3.fromRGB(200,200,200)
statusL.Text = "Ready."; statusL.Parent = panel

local buyBtn = Instance.new("TextButton")
buyBtn.Position = UDim2.new(1, -110, 0, 160)
buyBtn.Size = UDim2.new(0, 100, 0, 26)
buyBtn.Text = "Buy Now"
buyBtn.Font = Enum.Font.Code; buyBtn.TextSize = 14
buyBtn.BackgroundColor3 = Color3.fromRGB(40,80,40)
buyBtn.TextColor3 = Color3.fromRGB(240,240,240)
buyBtn.BorderSizePixel = 0
buyBtn.Parent = panel

-- minimize ‚Üí tiny icon
local icon = Instance.new("TextButton")
icon.Size = UDim2.new(0,40,0,40); icon.Position = panel.Position
icon.Text = "ü™¢"; icon.Font = Enum.Font.SourceSansBold; icon.TextSize = 24
icon.BackgroundColor3 = Color3.fromRGB(35,35,35); icon.BorderSizePixel = 0
icon.Visible = false; icon.Parent = gui
local function minimize() icon.Position = panel.Position; panel.Visible=false; icon.Visible=true end
local function restore() panel.Visible=true; icon.Visible=false end
local minBtn = Instance.new("TextButton")
minBtn.Size = UDim2.new(0,24,0,24); minBtn.Position = UDim2.new(1,-28,0,4)
minBtn.Text="‚Äì"; minBtn.TextScaled=true; minBtn.BackgroundColor3=Color3.fromRGB(40,40,40); minBtn.BorderSizePixel=0; minBtn.Parent = panel
minBtn.MouseButton1Click:Connect(minimize)
icon.MouseButton1Click:Connect(restore)
UIS.InputBegan:Connect(function(i,g) if not g and i.KeyCode==Enum.KeyCode.J then if panel.Visible then minimize() else restore() end end end)

-- ============== PURCHASE ENGINE (specific remote) ==============
local PurchaseItemRemote: RemoteFunction? = nil
do
    local remotes = ReplicatedStorage:FindFirstChild("Remotes")
    if remotes then
        local r = remotes:FindFirstChild("PurchaseItemRemote")
        if r and r:IsA("RemoteFunction") then PurchaseItemRemote = r end
    end
end

local function setStatus(t: string) statusL.Text = t; print("[LassoMarket]", t) end

-- Try common argument shapes until one succeeds.
local function callPurchase(itemId: string, qty: number): (boolean, any)
    if not PurchaseItemRemote then
        setStatus("PurchaseItemRemote not found at ReplicatedStorage.Remotes.PurchaseItemRemote")
        return false, "no-remote"
    end
    -- Skip qty 0 ‚Äî do nothing.
    if qty <= 0 then return true, "skipped" end

    local variants = {
        function() return itemId, qty end,                                           -- (id, qty)
        function() return {itemId=itemId, quantity=qty} end,                         -- { itemId=, quantity= }
        function() return {Id=itemId, Qty=qty} end,                                  -- { Id=, Qty= }
        function() return {name=itemId, count=qty} end,                              -- { name=, count= }
        function() return itemId end,                                                -- (id) once
    }
    for idx, build in ipairs(variants) do
        local a, b = build()
        local ok, res = pcall(function()
            return (PurchaseItemRemote :: RemoteFunction):InvokeServer(a, b)
        end)
        if ok then
            return true, res
        end
    end
    return false, "all-variants-failed"
end

local function buyQueued()
    -- nothing to buy?
    local something=false
    for _,it in ipairs(Catalog) do if (Order[it.id] or 0) > 0 then something=true break end end
    if not something then setStatus("Nothing to buy (all quantities are 0)."); return end

    for _, it in ipairs(Catalog) do
        local q = Order[it.id] or 0
        if q > 0 then
            setStatus(("Buying %s x%d..."):format(it.name, q))
            local ok, res = callPurchase(it.id, q)
            if ok then
                setStatus(("OK: %s x%d (server: %s)"):format(it.name, q, tostring(res)))
            else
                setStatus(("Failed: %s x%d"):format(it.name, q))
            end
        end
    end
end

buyBtn.MouseButton1Click:Connect(buyQueued)

-- also expose a programmatic trigger for your ‚Äúafter tame‚Äù step
_G.TriggerLassoPurchase = function() buyQueued() end
